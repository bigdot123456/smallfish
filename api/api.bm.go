// Code generated by protoc-gen-bm v0.1, DO NOT EDIT.
// source: api.proto

/*
Package api is a generated blademaster stub package.
This code was generated with kratos/tool/protobuf/protoc-gen-bm v0.1.

package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

It is generated from these files:
	api.proto
*/
package api

import (
	"context"

	bm "github.com/bilibili/kratos/pkg/net/http/blademaster"
	"github.com/bilibili/kratos/pkg/net/http/blademaster/binding"
)
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

// to suppressed 'imported but not used warning'
var _ *bm.Context
var _ context.Context
var _ binding.StructValidator

var PathAsmallsPing = "/smalls.service.v1.Asmalls/Ping"
var PathAsmallsSayHello = "/smalls.service.v1.Asmalls/SayHello"
var PathAsmallsSayHelloURL = "/kratos-smalls/say_hello"
var PathAsmallsCreate = "/smalls.service.v1.Asmalls/Create"
var PathAsmallsDelete = "/smalls.service.v1.Asmalls/Delete"
var PathAsmallsGet = "/live-room/get"

// AsmallsBMServer is the server API for Asmalls service.
type AsmallsBMServer interface {
	Ping(ctx context.Context, req *google_protobuf1.Empty) (resp *google_protobuf1.Empty, err error)

	SayHello(ctx context.Context, req *HelloReq) (resp *google_protobuf1.Empty, err error)

	SayHelloURL(ctx context.Context, req *HelloReq) (resp *HelloResp, err error)

	Create(ctx context.Context, req *Req) (resp *Resp, err error)

	Delete(ctx context.Context, req *Req) (resp *Resp, err error)

	Get(ctx context.Context, req *Req) (resp *Resp, err error)
}

var AsmallsSvc AsmallsBMServer

func asmallsPing(c *bm.Context) {
	p := new(google_protobuf1.Empty)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AsmallsSvc.Ping(c, p)
	c.JSON(resp, err)
}

func asmallsSayHello(c *bm.Context) {
	p := new(HelloReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AsmallsSvc.SayHello(c, p)
	c.JSON(resp, err)
}

func asmallsSayHelloURL(c *bm.Context) {
	p := new(HelloReq)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AsmallsSvc.SayHelloURL(c, p)
	c.JSON(resp, err)
}

func asmallsCreate(c *bm.Context) {
	p := new(Req)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AsmallsSvc.Create(c, p)
	c.JSON(resp, err)
}

func asmallsDelete(c *bm.Context) {
	p := new(Req)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AsmallsSvc.Delete(c, p)
	c.JSON(resp, err)
}

func asmallsGet(c *bm.Context) {
	p := new(Req)
	if err := c.BindWith(p, binding.Default(c.Request.Method, c.Request.Header.Get("Content-Type"))); err != nil {
		return
	}
	resp, err := AsmallsSvc.Get(c, p)
	c.JSON(resp, err)
}

// RegisterAsmallsBMServer Register the blademaster route
func RegisterAsmallsBMServer(e *bm.Engine, server AsmallsBMServer) {
	AsmallsSvc = server
	e.GET("/smalls.service.v1.Asmalls/Ping", asmallsPing)
	e.GET("/smalls.service.v1.Asmalls/SayHello", asmallsSayHello)
	e.GET("/kratos-smalls/say_hello", asmallsSayHelloURL)
	e.GET("/smalls.service.v1.Asmalls/Create", asmallsCreate)
	e.GET("/smalls.service.v1.Asmalls/Delete", asmallsDelete)
	e.GET("/live-room/get", asmallsGet)
}
